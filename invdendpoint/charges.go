package invdendpoint

const ChargeEndpoint = "/charges"

type ChargeRequest struct {
	Customer          int64         `json:"customer,omitempty"`            // Customer ID, required if invoice ID is not supplied
	Method            int64         `json:"method,omitempty"`              // Payment method ID, required
	Currency          string        `json:"currency,omitempty"`            // Optional, defaults to company currency
	Amount            float64       `json:"amount,omitempty"`              // Charge amount, required
	InvoicedToken     string        `json:"invoiced_token,omitempty"`      // Optional, generated by invoiced.js
	GatewayToken      string        `json:"gateway_token,omitempty"`       // Optional, generated by payment gateway
	PaymentSourceType string        `json:"payment_source_type,omitempty"` // One of card, bank_account
	PayementSourceId  float64       `json:"payment_source_id,omitempty"`   // Optional, card or bank account ID
	VaultMethod       bool          `json:"valut_method,omitempty"`        // Optional; when true, vaults the payment source on the customer’s account
	MakeDefault       bool          `json:"make_default,omitempty"`        // Optional; when this and vault_method are true, saves payment as default on customer’s account
	ReceiptEmail      string        `json:"receipt_email,omitempty"`       // Optional; where the payment receipt is sent
	Splits            []ChargeSplit `json:"splits,omitempty"`              // Required, contains payment application, i.e. [{“type”: “invoice”, “invoice”: 1234, “amount”: 400.00}]
}

type ChargeSplit struct {
	Type    string  `json:"type,omitempty"`
	Invoice int64   `json:"invoice,omitempty"`
	Amount  float64 `json:"amount,omitempty"`
}
